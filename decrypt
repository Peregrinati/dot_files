#!/bin/bash

function usage()
{
    stream=1
    if [ -z "$1" ]; then
        stream=2
    fi
    cat 1>&$stream <<-UMSG
		usage: ${0##*/} [options] encryptedFile

		This script decrypts a file using gpg's symetric encryption.
		It prompts for a password that will be used for both
		encryption and decryption.

		OPTIONS:
		    -h
		        Prints this message 

		    -k
		        Keep encryptedFile. The default it to delete it.

		    -o outputFileName
		        Output file. Defaults to the name the file had when it was ecrypted.

	UMSG
}

keepOriginal=false;

while getopts ":hko:" opt; do
    case $opt in
        h)
            usage 1
			exit 1
            ;;
        k)
            keepOriginal=true;
            ;;
        o)
            if [ ! -z $outFile ]; then
                echo "Multiple output files specified"
                usage
                exit 1
            fi
            outFile="$OPTARG"
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            echo
            usage
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1
            ;;
    esac
done
shift $(($OPTIND - 1))

if [ "$#" -gt 1 ]; then
    echo -e "More than one file specified\n" 1>&2
    usage
    exit 1
fi

if [ -z "$1" ]; then
    echo -e "No file specified\n" 1>&2
    usage
    exit 1
fi

if [ ! -e "$1" ]; then
    echo "'$1' does not exist" 1>&2
    exit 1
fi

if [ ! -r "$1" ]; then
    echo "Could not read '$1'" 1>&2
    exit 1
fi

options="--passphrase-fd 0"
if [ ! -z $outFile ]; then
	options="${options} -o ${outFile}"
fi

read -s -r -p "Passphrase: " pass
echo
echo $pass | gpg $options $1 
success=$?

if [ $success -ne 0 ]; then
	echo "Error during decryption!" 1>&2
	exit 1
fi
if  ! $keepOriginal ; then
	echo "removing $1"
	rm -f $1
fi
